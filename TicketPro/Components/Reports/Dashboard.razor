@page "/dashboard"
@using Syncfusion.Blazor.Charts
@using TicketPro.Services
@inject ITicketService TicketService
@rendermode InteractiveServer
@attribute [Authorize]

<PageTitle>Report Dashboard</PageTitle>

<h1>Revenue and Performance Metrics</h1>
<h4>Current as of @DateTime.Now.ToString("F")</h4>

@if (TechnicianRevenueData is not null)
{
    <div class="row mb-3">
        <div class="col-4">
            <SfChart Title="Revenue by Technician" Palettes="@BarColors">
                <ChartPrimaryXAxis Title="Technician" ValueType="Syncfusion.Blazor.Charts.ValueType.Category"/>
                <ChartPrimaryYAxis Title="Revenue in Dollars"/>
                <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
                <ChartSeriesCollection>
                    <ChartSeries DataSource="@TechnicianRevenueData" XName="TechnicianName" YName="TotalRevenue" Type="ChartSeriesType.Column"/>
                </ChartSeriesCollection>
            </SfChart>
        </div>
        <div class="col-4">
            <SfChart Title="Closed Tickets by Technician" Palettes="@BarColors">
                <ChartPrimaryXAxis Title="Technician" ValueType="Syncfusion.Blazor.Charts.ValueType.Category"/>
                <ChartPrimaryYAxis Title="Closed Tickets"/>
                <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
                <ChartSeriesCollection>
                    <ChartSeries DataSource="@TechnicianRevenueData" XName="TechnicianName" YName="TotalTickets" Type="ChartSeriesType.Column"/>
                </ChartSeriesCollection>
            </SfChart>
        </div>
        <div class="col-4">
            <SfChart Title="Billable Hours by Technician" Palettes="@BarColors">
                <ChartPrimaryXAxis Title="Technician" ValueType="Syncfusion.Blazor.Charts.ValueType.Category"/>
                <ChartPrimaryYAxis Title="Billable Hours"/>
                <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
                <ChartSeriesCollection>
                    <ChartSeries DataSource="@TechnicianRevenueData" XName="TechnicianName" YName="TotalHours" Type="ChartSeriesType.Column"/>
                </ChartSeriesCollection>
            </SfChart>
        </div>
    </div>
}
else
{
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}

@if (CustomerRevenueData is not null)
{
    <div class="row">
        <div class="col-4">
            <SfChart Title="Revenue by Customer" Palettes="@BarColors">
                <ChartPrimaryXAxis Title="Customer" ValueType="Syncfusion.Blazor.Charts.ValueType.Category"/>
                <ChartPrimaryYAxis Title="Revenue in Dollars"/>
                <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
                <ChartSeriesCollection>
                    <ChartSeries DataSource="@CustomerRevenueData" XName="CustomerName" YName="TotalRevenue" Type="ChartSeriesType.Column"/>
                </ChartSeriesCollection>
            </SfChart>
        </div>
        <div class="col-4">
            <SfChart Title="Closed Tickets by Customer" Palettes="@BarColors">
                <ChartPrimaryXAxis Title="Customer" ValueType="Syncfusion.Blazor.Charts.ValueType.Category"/>
                <ChartPrimaryYAxis Title="Closed Tickets"/>
                <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
                <ChartSeriesCollection>
                    <ChartSeries DataSource="@CustomerRevenueData" XName="CustomerName" YName="TotalTickets" Type="ChartSeriesType.Column"/>
                </ChartSeriesCollection>
            </SfChart>
        </div>
        <div class="col-4">
            <SfChart Title="Billable Hours by Customer" Palettes="@BarColors">
                <ChartPrimaryXAxis Title="Customer" ValueType="Syncfusion.Blazor.Charts.ValueType.Category"/>
                <ChartPrimaryYAxis Title="Billable Hours"/>
                <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
                <ChartSeriesCollection>
                    <ChartSeries DataSource="@CustomerRevenueData" XName="CustomerName" YName="TotalHours" Type="ChartSeriesType.Column"/>
                </ChartSeriesCollection>
            </SfChart>
        </div>
    </div>
}
else
{
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}

@code {
    private List<TechnicianRevenueDto>? TechnicianRevenueData { get; set; }
    private List<CustomerRevenueDto>? CustomerRevenueData { get; set; }
    private string[] BarColors { get; set; } = ["#0d6efd"];

    protected override async Task OnInitializedAsync()
    {
        TechnicianRevenueData = await TicketService.GetTechnicianRevenueDataAsync();
        CustomerRevenueData = await TicketService.GetCustomerRevenueDataAsync();
    }

}