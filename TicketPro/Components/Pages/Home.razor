@page "/"
@using TicketPro.Services
@using TicketPro.Data.Models
@using Syncfusion.Blazor.Charts
@inject ITicketService TicketService
@rendermode InteractiveServer
@attribute [Authorize]

<PageTitle>Home</PageTitle>

<h1>Welcome to TicketPro</h1>
@if (StatusData is null)
{
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}
else
{
    <div class="col-4">
        <SfAccumulationChart Title="Ticket Statistics">
            <AccumulationChartSeriesCollection>
                <AccumulationChartSeries DataSource="@StatusData" XName="Name" YName="Count" Name="Status" InnerRadius="40%">
                    <AccumulationDataLabelSettings Visible="true" Name="Text" Position="AccumulationLabelPosition.Outside"></AccumulationDataLabelSettings>
                </AccumulationChartSeries>
            </AccumulationChartSeriesCollection>
            <AccumulationChartLegendSettings Visible="true"/>
            <AccumulationChartTooltipSettings Enable="true"/>
        </SfAccumulationChart>
    </div>
}

@code {
    private List<TicketStatusData>? StatusData { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var allTickets = await TicketService.GetTicketStatusDataAsync();
        StatusData =
        [
            new TicketStatusData
            {
                Name = "Open",
                Count = allTickets.Count(t => t.Status == TicketStatus.Open)
            },
            new TicketStatusData
            {
                Name = "Assigned",
                Count = allTickets.Count(t => t.Status == TicketStatus.Assigned)
            },
            new TicketStatusData
            {
                Name = "Deferred",
                Count = allTickets.Count(t => t.Status == TicketStatus.Deferred)
            }
        ];
    }

    public class TicketStatusData
    {
        public string Name { get; set; } = string.Empty;
        public int Count { get; set; }
    }

}

