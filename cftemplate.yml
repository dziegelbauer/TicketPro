AWSTemplateFormatVersion: 2010-09-09
Description: The template used to create an ECS Service from the ECS Console.
Parameters:
  ECSClusterName:
    Type: String
    Default: ticketpro
  ECSServiceName:
    Type: String
    Default: TicketPro
  SecurityGroupIDs:
    Type: CommaDelimitedList
    Default: sg-068970fdb79561a17
  SubnetIDs:
    Type: CommaDelimitedList
    Default: >-
      subnet-0516d2cf6cde7fa6f,subnet-03cb52983084b4ad1,subnet-02135609b9fd5c25e,subnet-07382efaf72d51da3,subnet-00dc118c74248d00c,subnet-000b0a834c208b312
  VpcID:
    Type: String
    Default: vpc-0128b0980acffb37e
  LoadBalancerName:
    Type: String
    Default: TicketPro
Resources:
  ECSService:
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster: ticketpro
      CapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Base: 0
          Weight: 1
      TaskDefinition: 'arn:aws:ecs:us-east-1:<AWS_Account_Number>:task-definition/TicketPro:4'
      ServiceName: TicketPro
      SchedulingStrategy: REPLICA
      DesiredCount: 1
      LoadBalancers:
        - ContainerName: ticketpro
          ContainerPort: 8080
          LoadBalancerName: !Ref 'AWS::NoValue'
          TargetGroupArn: !Ref TargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups: !Ref SecurityGroupIDs
          Subnets: !Ref SubnetIDs
      PlatformVersion: LATEST
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
      DeploymentController:
        Type: ECS
      ServiceConnectConfiguration:
        Enabled: false
      Tags: []
      EnableECSManagedTags: true
    DependsOn:
      - Listener
  LoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Type: application
      Name: TicketPro
      SecurityGroups: !Ref SecurityGroupIDs
      Subnets: !Ref SubnetIDs
  TargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckPath: /
      Name: TicketPro1
      Port: 80
      Protocol: HTTP
      TargetType: ip
      HealthCheckProtocol: HTTP
      VpcId: !Ref VpcID
  Listener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: '443'
      Protocol: HTTPS
      Certificates:
        - CertificateArn: >-
            arn:aws:acm:us-east-1:<AWS_Account_Number>:certificate/9aefe7ce-adbf-4559-a7b0-d30982445775
Outputs:
  ClusterName:
    Description: The cluster used to create the service.
    Value: !Ref ECSClusterName
  ECSService:
    Description: The created service.
    Value: !Ref ECSService
  LoadBalancer:
    Description: The created load balancer.
    Value: !Ref LoadBalancer
  Listener:
    Description: The created listener.
    Value: !Ref Listener
  TargetGroup:
    Description: The created target group.
    Value: !Ref TargetGroup
